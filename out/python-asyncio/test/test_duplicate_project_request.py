# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from asana_asyncio.models.duplicate_project_request import DuplicateProjectRequest

class TestDuplicateProjectRequest(unittest.TestCase):
    """DuplicateProjectRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DuplicateProjectRequest:
        """Test DuplicateProjectRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DuplicateProjectRequest`
        """
        model = DuplicateProjectRequest()
        if include_optional:
            return DuplicateProjectRequest(
                data = asana_asyncio.models.project_duplicate_request.ProjectDuplicateRequest(
                    name = 'New Project Name', 
                    team = '12345', 
                    include = '["members,notes,forms,task_notes,task_assignee,task_subtasks,task_attachments,task_dates,task_dependencies,task_followers,task_tags,task_projects"]', 
                    schedule_dates = asana_asyncio.models.project_duplicate_request_schedule_dates.ProjectDuplicateRequest_schedule_dates(
                        should_skip_weekends = True, 
                        due_on = '2019-05-21', 
                        start_on = '2019-05-21', ), )
            )
        else:
            return DuplicateProjectRequest(
        )
        """

    def testDuplicateProjectRequest(self):
        """Test DuplicateProjectRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
