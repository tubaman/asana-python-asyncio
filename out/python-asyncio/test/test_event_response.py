# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from asana_asyncio.models.event_response import EventResponse

class TestEventResponse(unittest.TestCase):
    """EventResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventResponse:
        """Test EventResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventResponse`
        """
        model = EventResponse()
        if include_optional:
            return EventResponse(
                user = None,
                resource = None,
                type = 'task',
                action = 'changed',
                parent = None,
                created_at = '2012-02-22T02:06:58.147Z',
                change = asana_asyncio.models.event_response_change.EventResponse_change(
                    field = 'assignee', 
                    action = 'changed', 
                    new_value = {"gid":"12345","resource_type":"user"}, 
                    added_value = {"gid":"12345","resource_type":"user"}, 
                    removed_value = {"gid":"12345","resource_type":"user"}, )
            )
        else:
            return EventResponse(
        )
        """

    def testEventResponse(self):
        """Test EventResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
