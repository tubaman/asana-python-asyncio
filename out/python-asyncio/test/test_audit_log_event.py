# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from asana_asyncio.models.audit_log_event import AuditLogEvent

class TestAuditLogEvent(unittest.TestCase):
    """AuditLogEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuditLogEvent:
        """Test AuditLogEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuditLogEvent`
        """
        model = AuditLogEvent()
        if include_optional:
            return AuditLogEvent(
                gid = '12345',
                created_at = '2021-01-01T00:00Z',
                event_type = 'task_deleted',
                event_category = 'deletion',
                actor = asana_asyncio.models.audit_log_event_actor.AuditLogEventActor(
                    actor_type = 'user', 
                    gid = '1111', 
                    name = 'Greg Sanchez', 
                    email = 'gregsanchez@example.com', ),
                resource = asana_asyncio.models.audit_log_event_resource.AuditLogEventResource(
                    resource_type = 'task', 
                    resource_subtype = 'milestone', 
                    gid = '1111', 
                    name = 'Example Task', 
                    email = '', ),
                details = { },
                context = asana_asyncio.models.audit_log_event_context.AuditLogEventContext(
                    context_type = 'web', 
                    api_authentication_method = 'cookie', 
                    client_ip_address = '1.1.1.1', 
                    user_agent = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36', 
                    oauth_app_name = '', 
                    rule_name = 'When Task is added to this project', )
            )
        else:
            return AuditLogEvent(
        )
        """

    def testAuditLogEvent(self):
        """Test AuditLogEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
