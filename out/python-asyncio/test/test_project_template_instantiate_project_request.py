# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from asana_asyncio.models.project_template_instantiate_project_request import ProjectTemplateInstantiateProjectRequest

class TestProjectTemplateInstantiateProjectRequest(unittest.TestCase):
    """ProjectTemplateInstantiateProjectRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectTemplateInstantiateProjectRequest:
        """Test ProjectTemplateInstantiateProjectRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectTemplateInstantiateProjectRequest`
        """
        model = ProjectTemplateInstantiateProjectRequest()
        if include_optional:
            return ProjectTemplateInstantiateProjectRequest(
                name = 'New Project Name',
                team = '12345',
                public = True,
                is_strict = True,
                requested_dates = [
                    asana_asyncio.models.date_variable_request.DateVariableRequest(
                        gid = '1', 
                        value = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                requested_roles = [
                    asana_asyncio.models.requested_role_request.RequestedRoleRequest(
                        gid = '1', 
                        value = '123', )
                    ]
            )
        else:
            return ProjectTemplateInstantiateProjectRequest(
                name = 'New Project Name',
        )
        """

    def testProjectTemplateInstantiateProjectRequest(self):
        """Test ProjectTemplateInstantiateProjectRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
