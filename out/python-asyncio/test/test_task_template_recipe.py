# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from asana_asyncio.models.task_template_recipe import TaskTemplateRecipe

class TestTaskTemplateRecipe(unittest.TestCase):
    """TaskTemplateRecipe unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskTemplateRecipe:
        """Test TaskTemplateRecipe
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskTemplateRecipe`
        """
        model = TaskTemplateRecipe()
        if include_optional:
            return TaskTemplateRecipe(
                name = 'Bug Report',
                task_resource_subtype = 'default_task',
                description = 'Please describe the bug you found and how to reproduce it.',
                html_description = 'Please describe the bug you found and how to reproduce it.',
                memberships = [
                    asana_asyncio.models.project_compact.ProjectCompact(
                        gid = '12345', 
                        resource_type = 'project', 
                        name = 'Stuff to buy', )
                    ],
                relative_start_on = 1,
                relative_due_on = 2,
                due_time = '13:15:00.000Z',
                dependencies = [
                    asana_asyncio.models.task_template_recipe_compact.TaskTemplateRecipeCompact(
                        name = 'Bug Report', 
                        task_resource_subtype = 'default_task', )
                    ],
                dependents = [
                    asana_asyncio.models.task_template_recipe_compact.TaskTemplateRecipeCompact(
                        name = 'Bug Report', 
                        task_resource_subtype = 'default_task', )
                    ],
                followers = [
                    asana_asyncio.models.user_compact.UserCompact(
                        gid = '12345', 
                        resource_type = 'user', 
                        name = 'Greg Sanchez', )
                    ],
                attachments = [
                    asana_asyncio.models.attachment_compact.AttachmentCompact(
                        gid = '12345', 
                        resource_type = 'attachment', 
                        name = 'Screenshot.png', 
                        resource_subtype = 'dropbox', )
                    ],
                subtasks = [
                    asana_asyncio.models.task_template_recipe_compact.TaskTemplateRecipeCompact(
                        name = 'Bug Report', 
                        task_resource_subtype = 'default_task', )
                    ],
                custom_fields = [
                    asana_asyncio.models.custom_field_compact.CustomFieldCompact(
                        gid = '12345', 
                        resource_type = 'custom_field', 
                        name = 'Status', 
                        type = 'text', 
                        enum_options = [
                            asana_asyncio.models.enum_option.EnumOption(
                                gid = '12345', 
                                resource_type = 'enum_option', 
                                name = 'Low', 
                                enabled = True, 
                                color = 'blue', )
                            ], 
                        enabled = True, 
                        representation_type = 'number', 
                        id_prefix = 'ID', 
                        is_formula_field = False, 
                        date_value = asana_asyncio.models.custom_field_compact_date_value.CustomFieldCompact_date_value(
                            date = '2024-08-23', 
                            date_time = '2024-08-23T22:00:00.000Z', ), 
                        enum_value = null, 
                        multi_enum_values = [
                            asana_asyncio.models.enum_option.EnumOption(
                                gid = '12345', 
                                resource_type = 'enum_option', 
                                name = 'Low', 
                                enabled = True, 
                                color = 'blue', )
                            ], 
                        number_value = 5.2, 
                        text_value = 'Some Value', 
                        display_value = 'blue', )
                    ]
            )
        else:
            return TaskTemplateRecipe(
        )
        """

    def testTaskTemplateRecipe(self):
        """Test TaskTemplateRecipe"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
