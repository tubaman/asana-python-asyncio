# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from asana_asyncio.models.goal_response import GoalResponse

class TestGoalResponse(unittest.TestCase):
    """GoalResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoalResponse:
        """Test GoalResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoalResponse`
        """
        model = GoalResponse()
        if include_optional:
            return GoalResponse(
                gid = '12345',
                resource_type = 'task',
                name = 'Grow web traffic by 30%',
                html_notes = '<body>Start building brand awareness.</body>',
                notes = 'Start building brand awareness.',
                due_on = '2019-09-15',
                start_on = '2019-09-14',
                is_workspace_level = True,
                liked = False,
                likes = [
                    asana_asyncio.models.like.Like(
                        gid = '12345', 
                        user = null, )
                    ],
                num_likes = 5,
                team = None,
                workspace = None,
                followers = [
                    null
                    ],
                time_period = None,
                metric = None,
                owner = None,
                current_status_update = None,
                status = 'green'
            )
        else:
            return GoalResponse(
        )
        """

    def testGoalResponse(self):
        """Test GoalResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
