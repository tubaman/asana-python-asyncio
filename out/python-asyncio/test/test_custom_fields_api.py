# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from asana_asyncio.api.custom_fields_api import CustomFieldsApi


class TestCustomFieldsApi(unittest.IsolatedAsyncioTestCase):
    """CustomFieldsApi unit test stubs"""

    async def asyncSetUp(self) -> None:
        self.api = CustomFieldsApi()

    async def asyncTearDown(self) -> None:
        await self.api.api_client.close()

    async def test_create_custom_field(self) -> None:
        """Test case for create_custom_field

        Create a custom field
        """
        pass

    async def test_create_enum_option_for_custom_field(self) -> None:
        """Test case for create_enum_option_for_custom_field

        Create an enum option
        """
        pass

    async def test_delete_custom_field(self) -> None:
        """Test case for delete_custom_field

        Delete a custom field
        """
        pass

    async def test_get_custom_field(self) -> None:
        """Test case for get_custom_field

        Get a custom field
        """
        pass

    async def test_get_custom_fields_for_workspace(self) -> None:
        """Test case for get_custom_fields_for_workspace

        Get a workspace's custom fields
        """
        pass

    async def test_insert_enum_option_for_custom_field(self) -> None:
        """Test case for insert_enum_option_for_custom_field

        Reorder a custom field's enum
        """
        pass

    async def test_update_custom_field(self) -> None:
        """Test case for update_custom_field

        Update a custom field
        """
        pass

    async def test_update_enum_option(self) -> None:
        """Test case for update_enum_option

        Update an enum option
        """
        pass


if __name__ == '__main__':
    unittest.main()
