# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from asana_asyncio.models.task_template_response_all_of_template import TaskTemplateResponseAllOfTemplate

class TestTaskTemplateResponseAllOfTemplate(unittest.TestCase):
    """TaskTemplateResponseAllOfTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskTemplateResponseAllOfTemplate:
        """Test TaskTemplateResponseAllOfTemplate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskTemplateResponseAllOfTemplate`
        """
        model = TaskTemplateResponseAllOfTemplate()
        if include_optional:
            return TaskTemplateResponseAllOfTemplate(
                name = 'Bug Report',
                task_resource_subtype = 'default_task',
                description = 'Please describe the bug you found and how to reproduce it.',
                html_description = 'Please describe the bug you found and how to reproduce it.',
                memberships = [
                    null
                    ],
                relative_start_on = 1,
                relative_due_on = 2,
                due_time = '13:15:00.000Z',
                dependencies = [
                    null
                    ],
                dependents = [
                    null
                    ],
                followers = [
                    null
                    ],
                attachments = [
                    null
                    ],
                subtasks = [
                    null
                    ],
                custom_fields = [
                    null
                    ]
            )
        else:
            return TaskTemplateResponseAllOfTemplate(
        )
        """

    def testTaskTemplateResponseAllOfTemplate(self):
        """Test TaskTemplateResponseAllOfTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
